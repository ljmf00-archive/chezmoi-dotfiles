#!/usr/bin/env bash

set -e

PACKAGES=""

{{ if eq .chezmoi.os "linux" -}}

#TODO: Run only on archlinux
#TODO: Add multilib repo and colors to pacman
#TODO: Add system-dotfiles

PACKAGES+="kitty
lightdm
lightdm-gtk-greeter
lightdm-gtk-greeter-settings
networkmanager
git
base-devel
npm
nodejs
feh
nautilus
speedcrunch
i3-gaps
rofi
rofimoji
xsel
compton
gtk3
papirus-icon-theme
xorg
xorg-apps
xf86-input-libinput
xf86-video-intel
xorg-fonts
wayland
vulkan-intel
openssh
thefuck
firefox
scrot
filezilla
"
#lib32-virtualgl

# Fonts
PACKAGES+="ttf-inconsolata
ttf-droid
ttf-dejavu
ttf-freefont
ttf-liberation
ttf-ubuntu-font-family
noto-fonts
noto-fonts-cjk
noto-fonts-emoji
ttf-croscore
ttf-opensans
ttf-roboto
"
AURPACKAGES+="ttf-wps-fonts
ttf-ms-fonts
nerd-fonts-dejavu-complete
"

# Design and handwriting utilities
PACKAGES+="gimp
krita
xournalpp
calligra
inkscape
"

# Audio utilities
PACKAGES+="audacity
lmms
alsa-firmware
alsa-oss
alsa-utils
pulseaudio
pulseaudio-equalizer
pulseaudio-alsa
pulseaudio-equalizer-ladspa
jack
pulseaudio-jack
pavucontrol
"
AURPACKAGES+="spotify
blockify
musixmatch-bin
"

# Text Editors
PACKAGES+="neovim
neovim-qt
python-neovim
emacs
code
"

if [[ "$(cat /etc/hostname)" == "mars" ]]; then
	PACKAGES+="nvidia
nvidia-settings
nvidia-utils
"
#lib32-nvidia-utils

fi

if [[ "$(cat /etc/hostname)" == "deimos" ]]; then
	AURPACKAGES+="kvkbd"
fi

su root -c "echo \"Installing packages...\" && \
pacman -Syu --noconfirm && \
pacman -Sy $(echo $PACKAGES | tr -s '\n' ' ') --needed --noconfirm && \
echo \"Create temporary permissions for sudo...\" && \
mv -f /etc/sudoers /etc/sudoers.bak && \
echo \"root ALL=(ALL) ALL\" > /etc/sudoers && \
echo \"$(whoami) ALL = NOPASSWD : ALL\" >> /etc/sudoers && \
echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers
"

if ! [ -x "/usr/bin/yay" ]; then
	echo "Installing yay..."
	pushd /tmp/
		mkdir -p "/tmp/yay-install/"
		pushd yay-install
			sudo -u "$(whoami)" -n bash -c "curl https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yay > PKGBUILD"
			sudo -u "$(whoami)" -n makepkg -sicf --needed --noconfirm
		popd

		sudo rm -rf yay-install
	popd
fi

AURPACKAGES="polybar
oh-my-zsh-git
i3lock-color
betterlockscreen
osx-arc-shadow
captain-frank-cursors-git
i3-battery-popup-git
discord
pamac-aur
slack-desktop
zoom
"

#TODO: Make a diff to avoid already installed packages

echo "Installing AUR packages..."
sudo -u luis yay -S $(echo $AURPACKAGES | tr -s '\n' ' ') --needed --noconfirm

chsh -s /usr/bin/zsh "$(whoami)"

#TODO: Remove this code duplication

# ZSH Plugin: zsh-autosuggestions
ZSH_PLUGIN_DIR="/home/$(whoami)/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
if [ -d "$ZSH_PLUGIN_DIR" ]; then
	# Updating
	echo "Updating zsh-autosuggestions plugin..."
	pushd "$ZSH_PLUGIN_DIR"
	git pull
	popd
else
	# Installing
	echo "Installing zsh-autosuggestions plugin..."
	git clone https://github.com/zsh-users/zsh-autosuggestions.git "$ZSH_PLUGIN_DIR"
fi


# ZSH Plugin: zsh-wakatime
ZSH_PLUGIN_DIR="/home/$(whoami)/.oh-my-zsh/custom/plugins/zsh-wakatime"
if [ -d "$ZSH_PLUGIN_DIR" ]; then
	# Updating
	echo "Updating zsh-wakatime plugin..."
	pushd "$ZSH_PLUGIN_DIR"
		git pull
	popd
else
	# Installing
	echo "\e[92m-->\e[0m \e[1mInstalling zsh-wakatime plugin..."
	git clone https://github.com/wbingli/zsh-wakatime.git "$ZSH_PLUGIN_DIR"
fi


# ZSH Plugin: zsh-syntax-highlighting
ZSH_PLUGIN_DIR="/home/$(whoami)/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
if [ -d "$ZSH_PLUGIN_DIR" ]; then
	# Updating
	echo "Updating zsh-syntax-highlighting plugin..."
	pushd "$ZSH_PLUGIN_DIR"
		git pull
	popd
else
	# Installing
	echo "Installing zsh-syntax-highlighting plugin..."
	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_PLUGIN_DIR"
fi

bash -c "curl https://gitlab.com/aurorafossorg/utils/supershell/raw/master/supershell.sh > /home/$(whoami)/supershell.sh"

sudo npm i -g i3-cycle-focus
sudo systemctl enable lightdm

echo "Restore permissions for sudo"
sudo mv -f /etc/sudoers.bak /etc/sudoers

{{ else if eq .chezmoi.os "darwin" -}}

{{ end -}}